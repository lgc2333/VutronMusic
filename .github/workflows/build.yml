name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

permissions: write-all

jobs:
  Release:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        arch: [x64]
        include:
          - os: macos-latest
            arch: arm64

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Setup node-gyp requirements (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          python -m pip install --upgrade pip
          pip install setuptools
          npm install -g node-gyp

      - name: Install build essentials (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install rpm

      # - name: Install Chromium sandbox (Linux)
      #   if: matrix.os == 'ubuntu-latest'
      #   run: sudo apt-get install -y chromium-sandbox

      # - name: Set permissions for sandbox (Linux)
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     sudo chown root:root ./node_modules/electron/dist/chrome-sandbox
      #     sudo chmod 4755 ./node_modules/electron/dist/chrome-sandbox

      - name: Install deps
        run: yarn

      - name: Rebuild native dependencies for current architecture
        run: |
          npm rebuild --target_arch=${{ matrix.arch }}
          ./node_modules/.bin/electron-rebuild --arch=${{ matrix.arch }}

      - name: Build/release Electron app
        shell: bash
        if: matrix.os != 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.github_token }}
          ARCH: ${{ matrix.arch }}
          PLATFORM_FLAG: ${{ (matrix.os == 'windows-latest' && '-w') || '-ml' }}
        run: >
          yarn build --${{ matrix.arch }} ${{ env.PLATFORM_FLAG }}
          || yarn build --${{ matrix.arch }} ${{ env.PLATFORM_FLAG }}

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-win-installer-${{ matrix.arch }}
          path: release/*/VutronMusic*_${{ matrix.arch }}.exe
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-win-portable-${{ matrix.arch }}
          path: release/*/VutronMusic*_${{ matrix.arch }} Portable.exe
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-mac-${{ matrix.arch }}
          path: release/*/VutronMusic*_${{ matrix.arch }}.dmg
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-linux-snap-${{ matrix.arch }}
          path: release/*/VutronMusic*.snap
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-linux-AppImage-${{ matrix.arch }}
          path: release/*/VutronMusic*.AppImage
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-linux-deb-${{ matrix.arch }}
          path: release/*/VutronMusic*.deb
          if-no-files-found: ignore

      - uses: actions/upload-artifact@v4
        with:
          name: VutronMusic-linux-rpm-${{ matrix.arch }}
          path: release/*/VutronMusic*.rpm
          if-no-files-found: ignore
